
################### fzf / Fuzzy Finder ###############################

# Begin -----------------------------------------------------------------------------------------

#source /usr/share/bash-completion/completions/fzf

#source /usr/share/doc/fzf/examples/key-bindings.bash

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

export FZF_CTRL_T_COMMAND='fdfind --type f --color=never --hidden'
export FZF_CTRL_T_OPTS="--preview 'bat --color=always --line-range :100 {}' --bind 'ctrl-space:toggle-preview' --height=80% --layout=reverse"

export FZF_ALT_C_COMMAND='fdfind --type d . --color=never --hidden'
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -100' --bind 'ctrl-space:toggle-preview' --height=80% --layout=reverse"

# Use fpfr to generate the list for directory completion using fdfind
fpfr() {
  fdind --hidden --type f --follow --exclude ".git" . "$1"
}

#fdp() { 
#    #fdfind --type d --hidden --follow --exclude ".git" . 
#    fdfind --type f --color=never --hidden --exclude '.git' | fzf 
#}

# Use dpfr to generate the list for directory completion using fdfind
dpfr() {
  fdfind --type d --hidden --follow --exclude ".git" . "$1"
}

# Another CTRL-T script to select a directory and paste it into line
fdp ()
{
        builtin typeset READLINE_LINE_NEW="$(
                command find -L . \( -path '*/\.*' -o -fstype dev -o -fstype proc \) \
                        -prune \
                        -o -type f -print \
                        -o -type d -print \
                        -o -type l -print 2>/dev/null \
                | command sed 1d \
                | command cut -b3- \
                | env fzf -m
        )"

        if
                [[ -n $READLINE_LINE_NEW ]]
        then
                builtin bind '"\er": redraw-current-line'
                builtin bind '"\e^": magic-space'
                READLINE_LINE=${READLINE_LINE:+${READLINE_LINE:0:READLINE_POINT}}${READLINE_LINE_NEW}${READLINE_LINE:+${READLINE_LINE:READLINE_POINT}}
                READLINE_POINT=$(( READLINE_POINT + ${#READLINE_LINE_NEW} ))
        else
                builtin bind '"\er":'
                builtin bind '"\e^":'
        fi
}

builtin bind -x '"\C-x1": fdp'
builtin bind '"\et": "\C-x1\e^\er"'

bind "$(bind -s | grep '^"\\C-r"' | sed 's/"/"\\C-x/' | sed 's/"$/\\C-m"/')"

# End ---------------------------------------------------------------------------------------------
