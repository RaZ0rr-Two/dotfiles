"----------------------------------------------------------------------------------------

"               Settings and options

"------------------------------------------------------------------------------------------------
" Show indicator when shell inside vifm (also change .bashrc)
let $INSIDE_VIFM = 'true'

set vicmd=$EDITOR

"open with preview window and dotfiles hidden
view!
" normal! zo
set dotfiles

" tabname tab1

tabnew
cd ~ ~

tabnew
cd ~ ~

tabnext 1

set viewcolumns=-50%{name},50%{ext}

set vifminfo=dhistory,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks,bmarks

set syscalls

set trash

set history=100

set followlinks

" set fastrun

set sortnumbers

set undolevels=100

set vimhelp

set norunexec

" colorscheme dracula
colorscheme zenburn_1

set timefmt=%m/%d\ %H:%M

set wildmenu

set wildstyle=popup

set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

set ignorecase
set smartcase

set nohlsearch
set incsearch

set scrolloff=4

if !has('win')
    set slowfs=curlftpfs
endif

set statusline='  %t%= %A %10u:%-7g %15E %20d  '

"Bookmarks ( set with m, goto with ')
mark d ~/Documents/
mark D ~/Downloads

" ------------------------------------------------------------------------------

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart full

"----------------------------------------------------------------------------------------

"               Filepreview with vifmimg and uberzug

"------------------------------------------------------------------------------------------------

" fileviewer *[^/],.*[^/] bat --color=always --line-range :100 %c
" fileviewer *.[a-z],*.[0-9] bat --color=always --line-range :100 %c
" fileviewer * file -b %c

fileviewer *.cc,*.hh,*.[ch],*.[ch]pp,*.[ch]xx bat --color always --wrap never --pager never %c -p

fileviewer */ tree %c -L 1 --dirsfirst
fileviewer ../ tree %c -L 1 --dirsfirst

fileviewer *.pdf
		\ vifmimg pdf %px %py %pw %ph %c
		\ %pc
		\ vifmimg clear

fileviewer *.djvu
		\ vifmimg djvu %px %py %pw %ph %c
		\ %pc
		\ vifmimg clear

fileviewer *.epub
		\ vifmimg epub %px %py %pw %ph %c
		\ %pc
		\ vifmimg clear

fileviewer <video/*>
		\ vifmimg video %px %py %pw %ph %c
		\ %pc
		\ vifmimg clear

fileviewer <image/*>
		\ vifmimg draw %px %py %pw %ph %c
		\ %pc
		\ vifmimg clear

fileviewer <audio/*>
		\ vifmimg audio %px %py %pw %ph %c
		\ %pc
		\ vifmimg clear

fileviewer <font/*>
		\ vifmimg font %px %py %pw %ph %c
		\ %pc
		\ vifmimg clear

fileviewer {*.[1-8]},<text/troff> man ./%c | col -b

fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c
fileviewer {*.tar},<application/x-tar> tar -tf %c
fileviewer {*.rar},<application/x-rar> unrar v %c
fileviewer {*.7z},<application/x-7z-compressed> 7z l %c

fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c

fileviewer {*.torrent},<application/x-bittorrent> dumptorrent -v %c

fileviewer {*.doc},<application/msword> catdoc %c

fileviewer {*.docx},
          \<application/
           \vnd.openxmlformats-officedocument.wordprocessingml.document>
         \ docx2txt.pl %f -

fileviewer *.[a-z] bat --color=always --line-range :100 %c
fileviewer .* bat --color=always --line-range :100 %c
fileviewer * defviewer %c

"----------------------------------------------------------------------------------------

"               Default open for different filetypes 

"------------------------------------------------------------------------------------------------

filetype * xdg-open

" Directories
filextype */
        \ {View in thunar}
        \ thunar %f &,

" Pdf
filextype {*.pdf},<application/pdf>
        \ {View in okular}
        \ okular %f, 

" PostScript
filextype {*.ps,*.eps,*.ps.gz},<application/postscript>
        \ {View in okular}
        \ okular %f, 
				\ {View in zathura}
        \ zathura %f,
        \ {View in gv}
        \ gv %c %i &,

" Djvu
filextype {*.djvu},<image/vnd.djvu>
        \ {View in okular}
        \ okular %f, 
        \ {View in zathura}
        \ zathura %f,
        \ {View in apvlv}
        \ apvlv %f,

" Audio
filetype {*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus},
        \<audio/*>
       \ {Play using ffplay}
       \ ffplay -nodisp -autoexit %c,
       \ {Play using MPlayer}
       \ mplayer %f,

" Video
filextype {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
          \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
          \*.as[fx]},
         \<video/*>
        \ {View using ffplay}
        \ ffplay -fs -autoexit %f,
        \ {View using Dragon}
        \ dragon %f:p,
        \ {View using mplayer}
        \ mplayer %f,

" Web
filextype {*.html,*.htm},<text/html>
        \ {Open with dwb}
        \ dwb %f %i &,
        \ {Open with firefox}
        \ firefox %f &,
        \ {Open with uzbl}
        \ uzbl-browser %f %i &,
filetype {*.html,*.htm},<text/html> links, lynx

" Object
filetype {*.o},<application/x-object> nm %f | less

" Man page
filetype {*.[1-8]},<text/troff> man ./%c

" Images
"filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
filextype <image/*>
        \ {View in sxiv}
        \ sxiv -ia %f &,
        \ {View in nomacs}
        \ nomacs %f &,
        \ {View in imv}
        \ imv -b 1D2330 -d %d &,
        \ {View in feh}
        \ feh %d &,
        \ {View in cacaview}
        \ cacaview %c &,


" OpenRaster
filextype *.ora
        \ {Edit in MyPaint}
        \ mypaint %f,

" Mindmap
filextype *.vym
        \ {Open with VYM}
        \ vym %f &,

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S,

" SHA1
filetype *.sha1
       \ {Check SHA1 hash sum}
       \ sha1sum -c %f %S,

" SHA256
filetype *.sha256
       \ {Check SHA256 hash sum}
       \ sha256sum -c %f %S,

" SHA512
filetype *.sha512
       \ {Check SHA512 hash sum}
       \ sha512sum -c %f %S,

" GPG signature
filetype {*.asc},<application/pgp-signature>
       \ {Check signature}
       \ !!gpg --verify %c,

" Torrent
filetype {*.torrent},<application/x-bittorrent> ktorrent %f &


" FuseZipMount
filetype {*.zip,*.jar,*.war,*.ear,*.oxt,*.apkg},
        \<application/zip,application/java-archive>
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ zip -sf %c | less,
       \ {Extract here}
       \ tar -xf %c,

" ArchiveMount
filetype {*.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz},
        \<application/x-tar>
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,


" Rar2FsMount and rar archives
filetype {*.rar},<application/x-rar>
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,


" IsoMount
filetype {*.iso},<application/x-iso9660-image>
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Fuse7z and 7z archives
filetype {*.7z},<application/x-7z-compressed>
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,

" Office files
filextype {*.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx,*.ppt},
         \<application/vnd.openxmlformats-officedocument.*,
          \application/msword,
          \application/vnd.ms-excel>
        \ libreoffice %f &


" TuDu files
filetype *.tudu tudu -f %c

" Qt projects
filextype *.pro qtcreator %f &

"----------------------------------------------------------------------------------------

"               Key Bindings

"------------------------------------------------------------------------------------------------

"extract better
command! extf :execute '!%%n extractfiles' &fusehome expand('%%D') expand('%%f:p')

" Compare files with diff
command! cmpinternal compare-cmd %a %S
command! cmp : if expand('%%c') == expand('%%f')
      \ |     echo expand('Comparing %%"c and %%"C:t ...')
      \ |     cmpinternal %c %C
      \ | else
      \ |     echo expand('Comparing files: %%"f ...')
      \ |     cmpinternal %f
      \ | endif

nnoremap <a-e> :extf<CR>

" nremap <Space><TAB> gt
nnoremap gr gT

nnoremap - <C-w>5<
nnoremap _ <C-w>5>

" Start shell in current directory
nnoremap s :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv
" nnoremap <silent> w : if &quickview && !layoutis('only')
"                    \|     view
"                    \| else
"                    \|     if layoutis('only')
"                    \|         if &lines + 50 < &columns | vsplit | else | split | endif
"                    \|     endif
"                    \|     view!
"                    \|     execute 'qnoremap w q:view|only|qunmap w<lt>cr>'
"                    \|     execute 'wincmd w'
"                    \| endif
"                    \| <cr>
" vnoremap <silent> w : if &quickview && !layoutis('only')
"                    \|     view
"                    \| else
"                    \|     if layoutis('only')
"                    \|         if &lines + 50 < &columns | vsplit | else | split | endif
"                    \|     endif
"                    \|     view!
"                    \|     execute 'qnoremap w q:view|only|qunmap w<lt>cr>'
"                    \|     execute 'wincmd w'
"                    \| endif
"                    \| <cr>gv

" Open file in nvim
nnoremap oo :!$EDITOR %f<cr>

" Open with default file manager (here thunar)
nnoremap OO :!thunar %f &<cr>

" Open file in the background using its default program
nnoremap gb :!xdg-open %f &<cr>
" nnoremap gb :file &<cr>l

nnoremap <PageDown>  <C-w>w5j<C-w>w
nnoremap <PageUp>    <C-w>w5k<C-w>w

" Interaction with system clipboard
if has('win')
    " Yank current directory path to Windows clipboard with forward slashes
    nnoremap yp :!echo %"d:gs!\!/! %i | clip<cr>
    " Yank path to current file to Windows clipboard with forward slashes
    nnoremap yf :!echo %"c:gs!\!/! %i | clip<cr>
elseif executable('xclip')
		" yank current directory path into the clipboard
		nnoremap yd :!echo -n %d | xclip -selection clipboard %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>
		" yank current file path into the clipboard
		nnoremap yf :!echo -n %c:p | xclip -selection clipboard %i<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>
		" yank current filename without path into the clipboard
		nnoremap yn :!echo -n %c | xclip -selection clipboard %i<cr>:echo expand('%"c') "is yanked to clipboard"<cr>
		" yank root of current file's name into the clipboard
		nnoremap yr :!echo -n %c:r | xclip -selection clipboard %i<cr>:echo expand('%"c:r') "is yanked to clipboard"<cr>
elseif executable('xsel')
		" yank current directory path into primary and selection clipboards
		nnoremap yd :!echo -n %d | xsel --input --primary %i &&
								\ echo -n %d | xsel --clipboard --input %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>
		" yank current file path into primary and selection clipboards
		nnoremap yf :!echo -n %c:p | xsel --input --primary %i &&
								\ echo -n %c:p | xsel --clipboard --input %i<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>
		" yank current filename without path into primary and selection clipboards
		nnoremap yn :!echo -n %c | xsel --input --primary %i &&
								\ echo -n %c | xsel --clipboard --input %i<cr>:echo expand('%"c') "is yanked to clipboard"<cr>
		" yank root of current file's name into primary and selection clipboards
		nnoremap yr :!echo -n %c:r | xsel --input --primary %i &&
								\ echo -n %c:r | xsel --clipboard --input %i<cr>:echo expand('%"c:r') "is yanked to clipboard"<cr>
endif

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" Open console in current directory
nnoremap ,t :!${TERMINAL:-alacritty} &<cr>

" Open editor to edit vifmrc and apply settings after returning to vifm
" nnoremap ,c :write | edit $MYVIFMRC | restart full<cr>
nnoremap ,c :write | execute ':!%n${EDITOR:-vim} $MYVIFMRC' | restart<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nnoremap ce :!less %f<cr>
"nnoremap ce :edit<cr>
nnoremap cc :copy<cr>
nnoremap cm :move<cr>
nnoremap cD :delete<cr>
nnoremap cn :touch<space>
nnoremap cd :mkdir<space>
nnoremap csl :!ln -s %C<cr>

" Midnight commander alike mappings
" Open current directory in the other pane
nnoremap <a-i> :sync<cr>
" Open directory under cursor in the other pane
nnoremap <a-o> :sync %c<cr>
" Swap panes
nnoremap <c-u> <c-w>x

nnoremap ~ :cd<cr>

nmap <space><space> tj
nmap <C-q> :qa<cr>
nmap Q :qa<cr>

nnoremap <M-c> :FZFlocate<cr>
nnoremap <M-f> :FZFfind<cr>
nnoremap <M-t> :FZFecho<cr>

command! FZFfind : set noquickview
                \| let $FZF_PICK = term('fd --type f --hidden --follow | fzf-tmux 2>/dev/tty')
                \| if $FZF_PICK != ''
                \|     execute 'goto' fnameescape($FZF_PICK)
                \| endif

command! FZFecho : set noquickview
                \| let $FZF_PICK = term('fd --type f --hidden --follow | fzf-tmux 2>/dev/tty')
                \| if $FZF_PICK != ''
                \|     echo ($FZF_PICK)
                \| endif

" variation that automatically enters directories
command! FZFlocate : set noquickview
                  \| let $FZF_PICK = term('fd --type d --hidden --follow | fzf-tmux 2>/dev/tty')
                  \| if $FZF_PICK != ''
                  \|     execute system('[ -f "$FZF_PICK" ] && echo goto || echo cd') fnameescape($FZF_PICK)
                  \| endif

" NERD font devicons
source $HOME/.config/vifm/icons/favicons.vifm
" source 'icons/icons'

" ------------------------------------------------------------------------------

" Use ag (the silver searcher) instead of grep
"
" set grepprg='ag --line-numbers %i %a %s'

