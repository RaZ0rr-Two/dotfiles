#!/usr/bin/env zsh

path+='/sbin:/usr/sbin'
export PATH=$PATH:$HOME/.local/bin

#----------------------------------------------------
# NEOVIM
#----------------------------------------------------
# export EDITOR="$HOME/Softwares/Installed/Terminal/nvim/nightly/nvim.appimage"
# man pages as neovim
# export MANPAGER="$HOME/Softwares/Installed/Terminal/nvim/nightly/nvim.appimage +Man!"
# export PATH="$PATH:$HOME/Softwares/Installed/Neovim/bin"
# if (( $+commands[nvim] )) ; then
if [[ -x "$(command -v nvim)" ]]; then
    export EDITOR='nvim'
    export MANPAGER="nvim -c Man!"
    export MANWIDTH=999
fi

#----------------------------------------------------
# >>> conda initialize >>>
#----------------------------------------------------
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/razorr/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/razorr/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/razorr/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/razorr/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Dotfiles path
export DOTFDIR=gFolder/RaZ0rr/dotfiles

# Qt5 applications theme configuration
if (( $+commands[qt5ct] )) ; then
	export QT_QPA_PLATFORMTHEME=qt5ct
fi

# Wine Config
export WINEPREFIX=~/GameZ/Wine

#----------------------------------------------------
# zoxide - jumper
#----------------------------------------------------
export _ZO_DATA_DIR="$HOME/.config/zoxide"
if [ -x "$(command -v zoxide)" ]; then 
	eval "$(zoxide init --cmd zj zsh)"
fi
# zoxide import --from z $HOME/.config/z-jump/
#----------------------------------------------------
# z - jumper
#----------------------------------------------------
# export _Z_DATA="$HOME/.config/z-jump/.z"
# export _Z_CMD=zj
# . /home/ACM-Lab/.config/z-jump/z.sh

#----------------------------------------------------
# For ROOT
#----------------------------------------------------
if [ -x "$(command -v root)" ]; then 
	export ROOTSYS="$HOME/Softwares/Installed/Build/root"
	export PATH=$ROOTSYS/bin:$PATH
	export LD_LIBRARY_PATH=$ROOTSYS/lib:$LD_LIBRARY_PATH
fi

#----------------------------------------------------
# Pythia 8
#----------------------------------------------------
if [ -x "$(command -v pythia)" ]; then 
	export PYTHIA8="$HOME/Softwares/Installed/Pythia/pythia8303"
	export PYTHIA8DATA=$PYTHIA8/share/Pythia8/xmldoc
	export PATH=$PYTHIA8/bin:$PATH
	export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PYTHIA8/lib
fi

#----------------------------------------------------
# GO language
#----------------------------------------------------
if [ -x "$(command -v go)" ]; then 
	export GOPATH=${HOME}/go
	export PATH=/usr/local/go/bin:${PATH}:${GOPATH}/bin
fi

#----------------------------------------------------
#Tmux 
#Tmuxp default path
#----------------------------------------------------
export TMUXP_CONFIGDIR=$HOME/.config/tmux/tmuxp

#----------------------------------------------------
#EIC commands config
#----------------------------------------------------
if [ -f ~/ActivateEIC ]; then
    source ~/ActivateEIC
fi

#--------------------------------------------------------
#	fzf / Fuzzy Finder 
#--------------------------------------------------------

export MY_FZF_PATH=$HOME/data_shared/Softwares/Source/fzf/gitclone

#source /usr/share/bash-completion/completions/fzf
#source /usr/share/doc/fzf/examples/key-bindings.bash
[ -f $ZDOTDIR/.fzf_cfg.zsh ] && source $ZDOTDIR/.fzf_cfg.zsh
#if [ -f ~/.fzf_config ]; then
#    source ~/.fzf_config
#fi

#----------------------------------------------------
#Starship config file
#----------------------------------------------------
export STARSHIP_CONFIG=~/.config/starshipPrompt/starship.toml

################## tmux extra configurations #######################
#tmux extra config
if [ -f ~/.tmux_extra ]; then
    source ~/.tmux_extra
fi

################# vifm terminal file manager ######################
#vifm config
if [ -f ~/.vifm_config ]; then
    source ~/.vifm_config
fi

#--------------------------------------------------------
#	nnn Terminal File manager 
#--------------------------------------------------------
#nnn config
if [ -x "$(command -v nnn)" ]; then 
	if [ -f ~/.nnn_config ]; then
		source ~/.nnn_config
	fi
fi

#--------------------------------------------------------
#	dotbare bare git repo manager
#--------------------------------------------------------
#dotbare config
#if [ -x "$(command -v dotbare)" ]; then 
if (( $+commands[dotbare] )) ; then
	if [ -f ~/.dotbare_config ]; then
	    source ~/.dotbare_config
	fi
fi


